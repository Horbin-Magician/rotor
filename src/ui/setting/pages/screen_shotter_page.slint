import { GroupBox, LineEdit, Palette, Slider } from "std-widgets.slint";
import { Page, ShortcutEdit, SettingNode, SettingGroup } from "page.slint";

export component ScreenShotterSettingPage inherits Page {
    in property <string> shortcut_pinwin_save;
    in property <string> shortcut_pinwin_close;
    in property <string> shortcut_pinwin_copy;
    in property <string> shortcut_pinwin_hide;
    in property <string> zoom_delta;

    callback zoom_delta_changed(string);
    callback shortcut_changed(string, KeyEvent);

    SettingGroup {
        title: @tr("快捷键");
        SettingNode {
            key: @tr("关闭贴图");
            ShortcutEdit {
                shortcut_text: shortcut_pinwin_close;
                shortcut_changed(event) => {
                    shortcut_changed("pinwin_close", event);
                }
            }
        }

        SettingNode {
            key: @tr("复制贴图");
            ShortcutEdit {
                shortcut_text: shortcut_pinwin_copy;
                shortcut_changed(event) => {
                    shortcut_changed("pinwin_copy", event);
                }
            }
        }

        SettingNode {
            key: @tr("保存贴图");
            ShortcutEdit {
                shortcut_text: shortcut_pinwin_save;
                shortcut_changed(event) => {
                    shortcut_changed("pinwin_save", event);
                }
            }
        }

        SettingNode {
            key: @tr("隐藏贴图");
            ShortcutEdit {
                shortcut_text: shortcut_pinwin_hide;
                shortcut_changed(event) => {
                    shortcut_changed("pinwin_hide", event);
                }
            }
        }
    }

    SettingGroup {
        title: @tr("贴图");
        SettingNode {
            key: @tr("缩放灵敏度");
            Slider {
                width: 150px;
                minimum: 1;
                maximum: 10;
                step: 1;
                value: zoom_delta.to-float();
                changed => { self.value = self.value.round(); }
                released => { zoom_delta_changed(self.value); }
            }
        }
    }
}