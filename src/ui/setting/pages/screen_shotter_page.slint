import { GroupBox, LineEdit, Palette, Slider, ComboBox, Button, StandardListView } from "std-widgets.slint";
import { Page, ShortcutEdit, SettingNode, SettingGroup } from "page.slint";
import { SimpleBtn, ButtonType } from "../../frame/buttons.slint";

// struct Workspaces_slint {
//     id: int,
//     name: string,
// }

export component ScreenShotterSettingPage inherits Page {
    in property <string> shortcut_pinwin_save;
    in property <string> shortcut_pinwin_close;
    in property <string> shortcut_pinwin_copy;
    in property <string> shortcut_pinwin_hide;
    in property <string> zoom_delta;
    in property <int> current_workspace;
    // in property <[Workplace_slint]> workspaces;

    callback zoom_delta_changed(string);
    callback shortcut_changed(string, KeyEvent);
    callback workspace_changed(int);

    SettingGroup {
        title: @tr("快捷键");
        SettingNode {
            key: @tr("关闭贴图");
            ShortcutEdit {
                shortcut_text: shortcut_pinwin_close;
                shortcut_changed(event) => {
                    shortcut_changed("pinwin_close", event);
                }
            }
        }

        SettingNode {
            key: @tr("复制贴图");
            ShortcutEdit {
                shortcut_text: shortcut_pinwin_copy;
                shortcut_changed(event) => {
                    shortcut_changed("pinwin_copy", event);
                }
            }
        }

        SettingNode {
            key: @tr("保存贴图");
            ShortcutEdit {
                shortcut_text: shortcut_pinwin_save;
                shortcut_changed(event) => {
                    shortcut_changed("pinwin_save", event);
                }
            }
        }

        SettingNode {
            key: @tr("隐藏贴图");
            ShortcutEdit {
                shortcut_text: shortcut_pinwin_hide;
                shortcut_changed(event) => {
                    shortcut_changed("pinwin_hide", event);
                }
            }
        }
    }

    SettingGroup {
        title: @tr("贴图");
        SettingNode {
            key: @tr("缩放灵敏度");
            Slider {
                width: 150px;
                minimum: 1;
                maximum: 10;
                step: 1;
                value: zoom_delta.to-float();
                changed => { self.value = self.value.round(); }
                released => { zoom_delta_changed(self.value); }
            }
        }
        SettingNode {
            key: @tr("工作区");
            Rectangle {
                border-radius: 5px;
                border-width: 1px;
                border-color: Palette.alternate-background;
                clip: true;
                HorizontalLayout {
                    width: 150px;
                    height: 30px;
                    Text {
                        width: 100px;
                        text: @tr("默认工作区");
                        vertical-alignment: center;
                        horizontal-alignment: center;
                    }
                    SimpleBtn {
                        width: 50px;
                        icon: @image-url("../../assets/icon/switch.svg");
                        clicked => {
                            workplace_popup.show();
                        }
                    }
                }
            }
        }
    }

    workplace_popup := PopupWindow {
        width: 200px;
        height: 200px;
        x: (root.width - self.width) * 0.5;
        y: (root.height - self.height) * 0.5;
        close-policy: close-on-click-outside;

        Rectangle {
            width: 100%;
            height: 100%;
            background: Palette.background;
            border-radius: 5px;
            border-width: 1px;
            border-color: Palette.accent-background;
        }

        VerticalLayout {
            StandardListView {
                current-item: root.current_workspace;
                model: [{text: "工作区1" }, { text: "工作区2" }, { text: "工作区3" }, { text: "工作区4" }, { text: "工作区5" }];
                current-item-changed(index) => {
                    root.workspace_changed(index);
                }
            }
            // HorizontalLayout {
            //     padding: 5px;
            //     spacing: 5px;
            //     SimpleBtn {
            //         border-width: 1px;
            //         border-color: Palette.alternate-background;
            //         type: ButtonType.Text;
            //         text: @tr("新增");
            //         height: 30px;
            //         clicked => {
            //             // TODO
            //         }
            //     }
            //     SimpleBtn {
            //         border-width: 1px;
            //         border-color: Palette.alternate-background;
            //         type: ButtonType.Text;
            //         text: @tr("删除");
            //         hover_color: red;
            //         height: 30px;
            //         clicked => {
            //             // TODO
            //         }
            //     }
            // }
        }
    }
}