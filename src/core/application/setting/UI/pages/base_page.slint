import { Button, ComboBox, Switch, GroupBox, LineEdit, Palette } from "std-widgets.slint";
import { Page } from "page.slint";

export component BaseSettingPage inherits Page {
    in-out property <bool> power_boot;
    in-out property <int> theme;
    in property <string> version: "unknown";

    in property <string> shortcut_search: "Shift+F";
    in property <string> shortcut_screenshot: "Shift+C";

    callback theme_changed(int);
    callback power_boot_changed(bool);
    callback shortcut_changed(string, KeyEvent);
    callback check_update();

    HorizontalLayout {
        alignment: space-between;
        padding-right: 80px;
        spacing: 20px;
        Text {
            text: @tr("语言");
            height: 30px;
            vertical-alignment: center;
        }
        ComboBox {
            width: 150px;
            height: 30px;
            model: ["简体中文", "English"];
            current-index: 0;
            enabled: false;
        }
    }

    HorizontalLayout {
        alignment: space-between;
        padding-right: 80px;
        spacing: 20px;
        Text {
            text: @tr("主题");
            height: 30px;
            vertical-alignment: center;
        }
        theme_box := ComboBox {
            width: 150px;
            height: 30px;
            model: ["跟随系统", "暗色", "亮色"];
            current-index: root.theme;
            enabled: false;
            selected(string) => {
                root.theme_changed(self.current-index);
            }
        }
    }

    HorizontalLayout {
        alignment: space-between;
        padding-right: 80px;
        spacing: 20px;
        Text {
            text: @tr("开机自启");
            height: 30px;
            vertical-alignment: center;
        }
        Switch { 
            height: 30px;
            checked <=> root.power_boot;
            toggled => {
                root.power_boot_changed(self.checked);
            }
        }
    }

    GroupBox {
        title: @tr("全局快捷键");
        VerticalLayout {
            padding-left: 20px;
            padding-right: 80px;
            spacing: 10px;
            HorizontalLayout {
                alignment: space-between;
                spacing: 20px;
                Text {
                    text: @tr("开始搜索");
                    height: 30px;
                    vertical-alignment: center;
                }
                Rectangle {
                    border-radius: 5px;
                    width: 150px;
                    border-width: 1px;

                    property <bool> active: false;

                    FocusScope {
                        Text {
                            text: root.shortcut_search;
                            vertical-alignment: center;
                        }
                        
                        focus-changed-event() => {
                            parent.active = self.has-focus;
                        }

                        key-released(event) => {
                            shortcut_changed("search", event);
                            accept
                        }
                    }

                    states [
                        active when active: {
                            border-color: Palette.accent-background;
                        }
                        inactive when !active: {
                            border-color: Palette.alternate-background;
                        }
                    ]
                }
            }

            HorizontalLayout {
                alignment: space-between;
                spacing: 20px;
                Text {
                    text: @tr("开始截图");
                    height: 30px;
                    vertical-alignment: center;
                }
                Rectangle {
                    border-radius: 5px;
                    width: 150px;
                    border-width: 1px;

                    property <bool> active: false;

                    FocusScope {
                        Text {
                            text: root.shortcut_screenshot;
                            vertical-alignment: center;
                        }
                        
                        focus-changed-event() => {
                            parent.active = self.has-focus;
                        }

                        key-released(event) => {
                            shortcut_changed("screenshot", event);
                            accept
                        }
                    }

                    states [
                        active when active: {
                            border-color: Palette.accent-background;
                        }
                        inactive when !active: {
                            border-color: Palette.alternate-background;
                        }
                    ]
                }
            }
        }
    }

    HorizontalLayout {
        alignment: space-between;
        padding-right: 80px;
        spacing: 20px;
        Text {
            text: @tr("当前版本：{}", version);
            height: 30px;
            vertical-alignment: center;
        }
        check_update_btn := Button {
            text: "检查更新";
            clicked => {root.check_update();}
        }
    }
}
